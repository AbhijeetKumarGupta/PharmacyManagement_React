{"version":3,"sources":["Data/index.js","Redux/Action/index.js","Components/Login/index.js","Components/Manager/Home/AddMedicine/index.js","Components/Manager/Home/ViewMedicine/index.js","Components/Manager/Home/AddEmp/index.js","Components/Manager/Home/ViewEmp/index.js","Components/Order/CreateOrder/index.js","Components/Order/ViewOrder/index.js","Components/Manager/Home/index.js","Components/Employee/Home/index.js","Components/Topbar/index.js","Components/Footer/index.js","App.js","reportWebVitals.js","Redux/Reducers/index.js","Redux/Store/index.js","Redux/localStorage/index.js","index.js"],"names":["medicineList","name","manufacturerName","price","stock","discount","emplList","firstName","lastName","dob","gender","experience","password","orderList","orderId","customerName","customerNo","products","quantityEachProd","totalAmount","adminCreds","id","pass","salesCreds","updateEmpList","payload","type","setMedList","setOrders","setIsAdmin","setIsSale","Login","props","handleLogin","console","log","adminCred","empCred","salesCred","i","length","self","location","isAdmin","handleSubmit","e","preventDefault","current","value","createRef","this","setAdminCred","setSalesCred","className","placeholder","ref","onClick","Component","connect","state","isSale","dispatch","AddMedicine","handleAdd","curMed","totalMed","medList","push","ViewMedicine","handleChange","propertyName","event","target","setState","handleRemove","tempList","filter","item","handleEdit","edit","editId","handleUpdate","totalWithoutcurMed","ind","map","index","onChange","bind","AddEmp","fName","lName","exp","oldList","empList","curEmp","ViewEmp","totalWithoutCurEmp","CreateOrder","handleDropdown","parseInt","split","handleOrder","orders","newOrder","Date","valueOf","toString","disabled","ViewOrder","handleChangeQuant","val","curOrder","totalWithoutcurOrder","product","AdminHome","selected","setEmpList","EmpHome","Topbar","handleLogout","aria-current","Footer","App","path","exact","component","style","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","reducers","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e981fd.chunk.js","sourcesContent":["var medicineList = [\r\n  {\r\n    name: \"Medicine Type 1\",\r\n    manufacturerName: \"Manufacturer 1\",\r\n    price: 10,\r\n    stock: 10,\r\n    discount: 10,\r\n  },\r\n  {\r\n    name: \"Medicine Type 2\",\r\n    manufacturerName: \"Manufacturer 2\",\r\n    price: 30,\r\n    stock: 10,\r\n    discount: 10,\r\n  },\r\n  {\r\n    name: \"Medicine Type 3\",\r\n    manufacturerName: \"Manufacturer 3\",\r\n    price: 20,\r\n    stock: 10,\r\n    discount: 10,\r\n  },\r\n  {\r\n    name: \"Medicine Type 4\",\r\n    manufacturerName: \"Manufacturer 4\",\r\n    price: 50,\r\n    stock: 10,\r\n    discount: 10,\r\n  },\r\n  {\r\n    name: \"Medicine Type 5\",\r\n    manufacturerName: \"Manufacturer 5\",\r\n    price: 60,\r\n    stock: 10,\r\n    discount: 10,\r\n  },\r\n];\r\n\r\nvar emplList = [\r\n  {\r\n    firstName: \"Employee\",\r\n    lastName: \"One\",\r\n    dob: \"dd-mm-yy\",\r\n    gender: \"Male\",\r\n    experience: 1,\r\n    password: \"test-one\",\r\n  },\r\n  {\r\n    firstName: \"Employee\",\r\n    lastName: \"Two\",\r\n    dob: \"dd-mm-yy\",\r\n    gender: \"Female\",\r\n    experience: 2,\r\n    password: \"test-two\",\r\n  },\r\n  {\r\n    firstName: \"Employee\",\r\n    lastName: \"Three\",\r\n    dob: \"dd-mm-yy\",\r\n    gender: \"Female\",\r\n    experience: 3,\r\n    password: \"test-three\",\r\n  },\r\n  {\r\n    firstName: \"Employee\",\r\n    lastName: \"Four\",\r\n    dob: \"dd-mm-yy\",\r\n    gender: \"Male\",\r\n    experience: 4,\r\n    password: \"test-four\",\r\n  },\r\n];\r\n\r\nvar orderList = [\r\n  {\r\n    orderId: \"1629710727511\",\r\n    customerName: \"Customer 1\",\r\n    customerNo: 9835462891,\r\n    products: \"Medicine Type 1\",\r\n    quantityEachProd: 2,\r\n    totalAmount: 20,\r\n  },\r\n  {\r\n    orderId: \"1629710727512\",\r\n    customerName: \"Customer 2\",\r\n    customerNo: 9835462892,\r\n    products: \"Medicine Type 3\",\r\n    quantityEachProd: 3,\r\n    totalAmount: 60,\r\n  },\r\n  {\r\n    orderId: \"1629710727513\",\r\n    customerName: \"Customer 3\",\r\n    customerNo: 9835462893,\r\n    products: \"Medicine Type 2\",\r\n    quantityEachProd: 1,\r\n    totalAmount: 30,\r\n  },\r\n];\r\n\r\nvar adminCreds = [\r\n  {\r\n    id: \"test-admin\",\r\n    pass: \"test-admin\",\r\n  },\r\n];\r\nvar salesCreds = [\r\n  {\r\n    id: \"test-sales\",\r\n    pass: \"test-sales\",\r\n  },\r\n];\r\n\r\nexport var medicineList;\r\nexport var emplList;\r\nexport var orderList;\r\nexport var adminCreds;\r\nexport var salesCreds;\r\n","export const updateEmpList = (payload) => ({\r\n  type: \"UP_EMP_LIST\",\r\n  payload,\r\n});\r\n\r\nexport const setEmpList = (payload) => ({\r\n  type: \"SET_EMP\",\r\n  payload,\r\n});\r\n\r\nexport const setMedList = (payload) => ({\r\n  type: \"SET_MED\",\r\n  payload,\r\n});\r\nexport const setOrders = (payload) => ({\r\n  type: \"SET_ORDER\",\r\n  payload,\r\n});\r\nexport const setIsAdmin = (payload) => ({\r\n  type: \"SET_IS_ADMIN\",\r\n  payload,\r\n});\r\nexport const setIsSale = (payload) => ({\r\n  type: \"SET_IS_SALE\",\r\n  payload,\r\n});\r\nexport const setAdminCred = (payload) => ({\r\n  type: \"SET_CRED_ADMIN\",\r\n  payload,\r\n});\r\nexport const setSalesCred = (payload) => ({\r\n  type: \"SET_CRED_SALE\",\r\n  payload,\r\n});\r\n","import React, { Component, createRef } from \"react\";\r\nimport { adminCreds, salesCreds } from \"../../Data\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setIsAdmin,\r\n  setIsSale,\r\n  setAdminCred,\r\n  setSalesCred,\r\n} from \"../../Redux/Action\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.id = createRef();\r\n    this.pass = createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setAdminCred(adminCreds);\r\n    this.props.setSalesCred(salesCreds);\r\n  }\r\n\r\n  handleLogin = (id, pass) => {\r\n    console.log(\"Enter\");\r\n    var adminCred = this.props.adminCred;\r\n    var empCred = this.props.salesCred;\r\n    for (var i = 0; i < adminCred.length; i++) {\r\n      if (adminCred[i].id === id && adminCred[i].pass === pass) {\r\n        this.props.setIsAdmin(true);\r\n        self.location =\r\n          \"http://AbhijeetKumarGupta.github.io/PharmacyManagement_React/homeA/\"; //\"http://localhost:3000/homeA/\";\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (this.props.isAdmin === false) {\r\n      for (var i = 0; i < empCred.length; i++) {\r\n        if (empCred[i].id === id && empCred[i].pass === pass) {\r\n          this.props.setIsSale(true);\r\n          self.location =\r\n            \"http://AbhijeetKumarGupta.github.io/PharmacyManagement_React/homeE/\"; //\"http://localhost:3000/homeE/\";\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.handleLogin(this.id.current.value, this.pass.current.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"px-4 py-3 mainLogin\">\r\n          <h2>Login</h2>\r\n          <hr />\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Id</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"User Id\"\r\n              ref={this.id}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label className=\"form-label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              ref={this.pass}\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Login\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProp = (state) => ({\r\n  isAdmin: state.isAdmin,\r\n  isSale: state.isSale,\r\n  adminCred: state.adminCred,\r\n  salesCred: state.salesCred,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setIsAdmin: (payload) => dispatch(setIsAdmin(payload)),\r\n  setIsSale: (payload) => dispatch(setIsSale(payload)),\r\n  setAdminCred: (payload) => dispatch(setAdminCred(payload)),\r\n  setSalesCred: (payload) => dispatch(setSalesCred(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(Login);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMedList } from \"../../../../Redux/Action\";\r\n\r\nclass AddMedicine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.name = createRef();\r\n    this.manufacturerName = createRef();\r\n    this.price = createRef();\r\n    this.stock = createRef();\r\n    this.discount = createRef();\r\n  }\r\n  handleAdd = (e) => {\r\n    e.preventDefault();\r\n    var name = this.name.current.value;\r\n    var manufacturerName = this.manufacturerName.current.value;\r\n    var price = this.price.current.value;\r\n    var stock = this.stock.current.value;\r\n    var discount = this.discount.current.value;\r\n    var curMed = {};\r\n    var totalMed = this.props.medList;\r\n    curMed.name = name;\r\n    curMed.manufacturerName = manufacturerName;\r\n    curMed.price = price;\r\n    curMed.stock = stock;\r\n    curMed.discount = discount;\r\n    totalMed.push(curMed);\r\n    this.props.setMedList(totalMed);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"px-4 py-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Medicine Name\"\r\n            ref={this.name}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Manufacturer Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Manufaturer\"\r\n            ref={this.manufacturerName}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Price</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Price\"\r\n            ref={this.price}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Stock</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Stock\"\r\n            ref={this.stock}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Discount</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Discount\"\r\n            ref={this.discount}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          onClick={this.handleAdd}\r\n        >\r\n          Add Med\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  medList: state.medList,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setMedList: (payload) => dispatch(setMedList(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(AddMedicine);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMedList } from \"../../../../Redux/Action\";\r\n\r\nclass ViewMedicine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      edit: false,\r\n      editId: \"\",\r\n      name: \"\",\r\n      manufacturerName: \"\",\r\n      price: \"\",\r\n      stock: \"\",\r\n      discount: \"\",\r\n    };\r\n    this.name = createRef();\r\n    this.manufacturerName = createRef();\r\n    this.price = createRef();\r\n    this.stock = createRef();\r\n    this.discount = createRef();\r\n  }\r\n  handleChange = (propertyName, event) => {\r\n    const state = this.state;\r\n    state[propertyName] = event.target.value;\r\n    this.setState(state);\r\n  };\r\n  handleRemove = (e) => {\r\n    var tempList = this.props.medList.filter(\r\n      (item) => item.name + item.manufacturerName + item.price !== e.target.id\r\n    );\r\n    this.props.setMedList(tempList);\r\n  };\r\n  handleEdit = (e) => {\r\n    var tempList = this.props.medList.filter(\r\n      (item) => item.name + item.manufacturerName + item.price === e.target.id\r\n    );\r\n    this.setState({ name: tempList[0].name });\r\n    this.setState({ manufacturerName: tempList[0].manufacturerName });\r\n    this.setState({ price: tempList[0].price });\r\n    this.setState({ stock: tempList[0].stock });\r\n    this.setState({ discount: tempList[0].discount });\r\n    this.setState({ edit: true });\r\n    this.setState({ editId: e.target.id });\r\n  };\r\n\r\n  handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    var name = this.name.current.value;\r\n    var manufacturerName = this.manufacturerName.current.value;\r\n    var price = this.price.current.value;\r\n    var stock = this.stock.current.value;\r\n    var discount = this.discount.current.value;\r\n    var curMed = {};\r\n    var totalWithoutcurMed = [];\r\n    var ind = -1;\r\n    for (var i = 0; i < this.props.medList.length; i++) {\r\n      var item = this.props.medList[i];\r\n      if (item.name + item.manufacturerName + item.price !== e.target.id) {\r\n        totalWithoutcurMed.push(item);\r\n      } else {\r\n        ind = i;\r\n        totalWithoutcurMed.push(null);\r\n      }\r\n    }\r\n    curMed.name = name;\r\n    curMed.manufacturerName = manufacturerName;\r\n    curMed.price = price;\r\n    curMed.stock = stock;\r\n    curMed.discount = discount;\r\n    totalWithoutcurMed[ind] = curMed;\r\n    this.setState({ edit: false });\r\n    this.props.setMedList(totalWithoutcurMed);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Medicine List</h2>\r\n        {this.props.medList.map(\r\n          ({ name, manufacturerName, price, stock, discount }, index) => (\r\n            <div className=\"empList\" key={index}>\r\n              <hr />\r\n              <div>\r\n                <span>\r\n                  <p>\r\n                    <span>Name -</span> {name}\r\n                  </p>\r\n                  <p>\r\n                    <span>Manufaturer Name -</span> {manufacturerName}\r\n                  </p>\r\n                  <p>\r\n                    <span>Price -</span> {price}\r\n                  </p>\r\n                  <p>\r\n                    <span>Stock -</span> {stock}\r\n                  </p>\r\n                  <p>\r\n                    <span>Discount -</span> {discount}\r\n                  </p>\r\n                </span>\r\n                <span className=\"buttonsSpan\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleRemove}\r\n                    id={name + manufacturerName + price}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleEdit}\r\n                    id={name + manufacturerName + price}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n        {this.state.edit && (\r\n          <div className=\"editMedDetails\">\r\n            <form className=\"px-4 py-3\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Medicine Name\"\r\n                  ref={this.name}\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange.bind(this, \"name\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Manufacturer Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Manufaturer\"\r\n                  ref={this.manufacturerName}\r\n                  value={this.state.manufacturerName}\r\n                  onChange={this.handleChange.bind(this, \"manufacturerName\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Price</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Price\"\r\n                  ref={this.price}\r\n                  value={this.state.price}\r\n                  onChange={this.handleChange.bind(this, \"price\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Stock</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Stock\"\r\n                  ref={this.stock}\r\n                  value={this.state.stock}\r\n                  onChange={this.handleChange.bind(this, \"stock\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Discount</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Discount\"\r\n                  ref={this.discount}\r\n                  value={this.state.discount}\r\n                  onChange={this.handleChange.bind(this, \"discount\")}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.handleUpdate}\r\n                id={this.state.editId}\r\n              >\r\n                Update Med\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  medList: state.medList,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setMedList: (payload) => dispatch(setMedList(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(ViewMedicine);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateEmpList } from \"../../../../Redux/Action\";\r\n\r\nclass AddEmp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.fName = createRef();\r\n    this.lName = createRef();\r\n    this.dob = createRef();\r\n    this.gender = createRef();\r\n    this.exp = createRef();\r\n    this.pass = createRef();\r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    e.preventDefault();\r\n    var fName = this.fName.current.value;\r\n    var lName = this.lName.current.value;\r\n    var dob = this.dob.current.value;\r\n    var gender = this.gender.current.value;\r\n    var exp = this.exp.current.value;\r\n    var pass = this.pass.current.value;\r\n    var oldList = this.props.empList;\r\n    var curEmp = {};\r\n    curEmp.firstName = fName;\r\n    curEmp.lastName = lName;\r\n    curEmp.dob = dob;\r\n    curEmp.gender = gender;\r\n    curEmp.experience = exp;\r\n    curEmp.password = pass;\r\n    oldList.push(curEmp);\r\n    this.props.updateEmpList(oldList);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"px-4 py-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"First Name\"\r\n            ref={this.fName}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Last Name\"\r\n            ref={this.lName}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">DOB</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"DOB\"\r\n            ref={this.dob}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Gender</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Gender\"\r\n            ref={this.gender}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Experience Year</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Experience Year\"\r\n            ref={this.exp}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Password\"\r\n            ref={this.pass}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          onClick={this.handleAdd}\r\n        >\r\n          Add Emp\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  empList: state.empList,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  updateEmpList: (payload) => dispatch(updateEmpList(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(AddEmp);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateEmpList } from \"../../../../Redux/Action\";\r\n\r\nclass ViewEmp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      edit: false,\r\n      editId: \"\",\r\n      fName: \"\",\r\n      lName: \"\",\r\n      dob: \"\",\r\n      gender: \"\",\r\n      exp: \"\",\r\n      pass: \"\",\r\n    };\r\n    this.fName = createRef();\r\n    this.lName = createRef();\r\n    this.dob = createRef();\r\n    this.gender = createRef();\r\n    this.exp = createRef();\r\n    this.pass = createRef();\r\n  }\r\n\r\n  handleChange = (propertyName, event) => {\r\n    const state = this.state;\r\n    state[propertyName] = event.target.value;\r\n    this.setState(state);\r\n  };\r\n  handleRemove = (e) => {\r\n    var tempList = this.props.empList.filter(\r\n      (item) => item.firstName + item.lastName + item.dob !== e.target.id\r\n    );\r\n    this.props.updateEmpList(tempList);\r\n  };\r\n  handleEdit = (e) => {\r\n    var tempList = this.props.empList.filter(\r\n      (item) => item.firstName + item.lastName + item.dob === e.target.id\r\n    );\r\n    this.setState({ fName: tempList[0].firstName });\r\n    this.setState({ lName: tempList[0].lastName });\r\n    this.setState({ dob: tempList[0].dob });\r\n    this.setState({ gender: tempList[0].gender });\r\n    this.setState({ exp: tempList[0].experience });\r\n    this.setState({ pass: tempList[0].password });\r\n    this.setState({ edit: true });\r\n    this.setState({ editId: e.target.id });\r\n  };\r\n  handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    var fName = this.fName.current.value;\r\n    var lName = this.lName.current.value;\r\n    var dob = this.dob.current.value;\r\n    var gender = this.gender.current.value;\r\n    var exp = this.exp.current.value;\r\n    var pass = this.pass.current.value;\r\n    var curEmp = {};\r\n    var totalWithoutCurEmp = [];\r\n    var ind = -1;\r\n    for (var i = 0; i < this.props.empList.length; i++) {\r\n      var item = this.props.empList[i];\r\n      if (item.firstName + item.lastName + item.dob !== e.target.id) {\r\n        totalWithoutCurEmp.push(item);\r\n      } else {\r\n        ind = i;\r\n        totalWithoutCurEmp.push(null);\r\n      }\r\n    }\r\n    curEmp.firstName = fName;\r\n    curEmp.lastName = lName;\r\n    curEmp.dob = dob;\r\n    curEmp.gender = gender;\r\n    curEmp.experience = exp;\r\n    curEmp.password = pass;\r\n    totalWithoutCurEmp[ind] = curEmp;\r\n    this.setState({ edit: false });\r\n    this.props.updateEmpList(totalWithoutCurEmp);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Employees List</h2>\r\n        {this.props.empList.map(\r\n          (\r\n            { firstName, lastName, dob, gender, experience, password },\r\n            index\r\n          ) => (\r\n            <div className=\"medList\" key={index}>\r\n              <hr />\r\n              <div>\r\n                <span>\r\n                  <p>\r\n                    <span>First Name -</span> {firstName}\r\n                  </p>\r\n                  <p>\r\n                    <span>Last Name -</span> {lastName}\r\n                  </p>\r\n                  <p>\r\n                    <span>DOB -</span> {dob}\r\n                  </p>\r\n                  <p>\r\n                    <span>Gender -</span> {gender}\r\n                  </p>\r\n                  <p>\r\n                    <span>Experience -</span> {experience}\r\n                  </p>\r\n                  <p>\r\n                    <span>Password -</span> {password}\r\n                  </p>\r\n                </span>\r\n                <span className=\"buttonsSpan\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleRemove}\r\n                    id={firstName + lastName + dob}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleEdit}\r\n                    id={firstName + lastName + dob}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n        {this.state.edit && (\r\n          <div className=\"editEmpDetails\">\r\n            <form className=\"px-4 py-3\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">First Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"First Name\"\r\n                  ref={this.fName}\r\n                  value={this.state.fName}\r\n                  onChange={this.handleChange.bind(this, \"fName\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Last Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Last Name\"\r\n                  ref={this.lName}\r\n                  value={this.state.lName}\r\n                  onChange={this.handleChange.bind(this, \"lName\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">DOB</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"DOB\"\r\n                  ref={this.dob}\r\n                  value={this.state.dob}\r\n                  onChange={this.handleChange.bind(this, \"dob\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Gender</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Gender\"\r\n                  ref={this.gender}\r\n                  value={this.state.gender}\r\n                  onChange={this.handleChange.bind(this, \"gender\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Experience Year</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Experience Year\"\r\n                  ref={this.exp}\r\n                  value={this.state.exp}\r\n                  onChange={this.handleChange.bind(this, \"exp\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Password</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  ref={this.pass}\r\n                  value={this.state.pass}\r\n                  onChange={this.handleChange.bind(this, \"pass\")}\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.handleUpdate}\r\n                id={this.state.editId}\r\n              >\r\n                Update Emp\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  empList: state.empList,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  updateEmpList: (payload) => dispatch(updateEmpList(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(ViewEmp);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setOrders } from \"../../../Redux/Action\";\r\n\r\nclass CreateOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      curMed: [],\r\n    };\r\n    this.customerName = createRef();\r\n    this.customerNo = createRef();\r\n    this.quantityEachProd = createRef();\r\n    this.totalAmount = createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      curMed: [\r\n        this.props.medList[0].name,\r\n        this.props.medList[0].price,\r\n      ].toString(),\r\n    });\r\n  }\r\n  handleDropdown = (e) => {\r\n    this.setState({ curMed: e.target.value });\r\n  };\r\n  handleChange = (e) => {\r\n    this.totalAmount.current.value =\r\n      parseInt(this.state.curMed.split(\",\")[1]) * e.target.value;\r\n  };\r\n  handleOrder = (e) => {\r\n    e.preventDefault();\r\n    var orderList = this.props.orders;\r\n    var newOrder = {};\r\n    var orderId = new Date().valueOf();\r\n    var customerName = this.customerName.current.value;\r\n    var customerNo = this.customerNo.current.value;\r\n    var products = this.state.curMed.split(\",\")[0];\r\n    var quantityEachProd = this.quantityEachProd.current.value;\r\n    var totalAmount = this.totalAmount.current.value;\r\n    newOrder.orderId = orderId.toString();\r\n    newOrder.customerName = customerName;\r\n    newOrder.customerNo = customerNo;\r\n    newOrder.products = products;\r\n    newOrder.quantityEachProd = quantityEachProd;\r\n    newOrder.totalAmount = totalAmount;\r\n    orderList.push(newOrder);\r\n    this.props.setOrders(orderList);\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"px-4 py-3\">\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Customer Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Customer Name\"\r\n            ref={this.customerName}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Customer No</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Customer No\"\r\n            ref={this.customerNo}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Product: &nbsp;</label>\r\n          <select name=\"medList\" id=\"medList\" onChange={this.handleDropdown}>\r\n            {this.props.medList.map((item) => (\r\n              <option value={[item.name, item.price]}>\r\n                Name:{item.name}, Price:{item.price}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Quantity</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Quantity\"\r\n            ref={this.quantityEachProd}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Total Amount</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Total Amount\"\r\n            ref={this.totalAmount}\r\n            disabled\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          onClick={this.handleOrder}\r\n        >\r\n          Order\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  medList: state.medList,\r\n  orders: state.orders,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setOrders: (payload) => dispatch(setOrders(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(CreateOrder);\r\n","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setOrders } from \"../../../Redux/Action\";\r\n\r\nclass ViewOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      curMed: [],\r\n      edit: false,\r\n      editId: \"\",\r\n      orderId: \"\",\r\n      customerName: \"\",\r\n      customerNo: \"\",\r\n      product: \"\",\r\n      quantityEachProd: \"\",\r\n      totalAmount: \"\",\r\n    };\r\n    this.customerName = createRef();\r\n    this.customerNo = createRef();\r\n    this.quantityEachProd = createRef();\r\n    this.totalAmount = createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      curMed: [\r\n        this.props.medList[0].name,\r\n        this.props.medList[0].price,\r\n      ].toString(),\r\n    });\r\n  }\r\n  handleRemove = (e) => {\r\n    e.preventDefault();\r\n    var tempList = this.props.orderList.filter(\r\n      (item) => item.orderId !== e.target.id\r\n    );\r\n    this.props.setOrders(tempList);\r\n  };\r\n  handleDropdown = (e) => {\r\n    this.setState({ curMed: e.target.value }, () => {\r\n      this.handleChangeQuant(\r\n        \"totalAmount\",\r\n        parseInt(this.quantityEachProd.current.value)\r\n      );\r\n    });\r\n  };\r\n  handleEdit = (e) => {\r\n    e.preventDefault();\r\n    var tempList = this.props.orderList.filter(\r\n      (item) => item.orderId === e.target.id\r\n    );\r\n    this.setState({ customerName: tempList[0].customerName });\r\n    this.setState({ customerNo: tempList[0].customerNo });\r\n    this.setState({ products: tempList[0].products });\r\n    this.setState({ quantityEachProd: tempList[0].quantityEachProd });\r\n    this.setState({ totalAmount: tempList[0].totalAmount });\r\n    this.setState({ edit: true });\r\n    this.setState({ editId: e.target.id });\r\n  };\r\n  handleChange = (propertyName, event) => {\r\n    const state = this.state;\r\n    state[propertyName] = event.target.value;\r\n    this.setState(state, () => {\r\n      if (propertyName === \"quantityEachProd\") {\r\n        this.handleChangeQuant(\"totalAmount\", event.target.value);\r\n      }\r\n    });\r\n  };\r\n  handleChangeQuant = (propertyName, val) => {\r\n    const state = this.state;\r\n    state[propertyName] = parseInt(this.state.curMed.split(\",\")[1]) * val;\r\n    this.setState(state);\r\n  };\r\n\r\n  handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    var orderId = \"\";\r\n    var customerName = this.customerName.current.value;\r\n    var customerNo = this.customerNo.current.value;\r\n    var products = this.state.curMed.split(\",\")[0];\r\n    var quantityEachProd = this.quantityEachProd.current.value;\r\n    var totalAmount = this.totalAmount.current.value;\r\n    var curOrder = {};\r\n    var totalWithoutcurOrder = [];\r\n    var ind = null;\r\n    for (var i = 0; i < this.props.orderList.length; i++) {\r\n      var item = this.props.orderList[i];\r\n      if (item.orderId !== e.target.id) {\r\n        totalWithoutcurOrder.push(item);\r\n      } else {\r\n        ind = i;\r\n        orderId = item.orderId;\r\n        totalWithoutcurOrder.push(null);\r\n      }\r\n    }\r\n    curOrder.orderId = orderId;\r\n    curOrder.customerName = customerName;\r\n    curOrder.customerNo = customerNo;\r\n    curOrder.products = products;\r\n    curOrder.quantityEachProd = quantityEachProd;\r\n    curOrder.totalAmount = totalAmount;\r\n    totalWithoutcurOrder[ind] = curOrder;\r\n    this.setState({ edit: false });\r\n    this.props.setOrders(totalWithoutcurOrder);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Order List</h2>\r\n        {this.props.orderList.map(\r\n          (\r\n            {\r\n              orderId,\r\n              customerName,\r\n              customerNo,\r\n              products,\r\n              quantityEachProd,\r\n              totalAmount,\r\n            },\r\n            index\r\n          ) => (\r\n            <div className=\"orderList\" key={orderId}>\r\n              <hr />\r\n              <div>\r\n                <span>\r\n                  <p>\r\n                    <span>O-Id -</span> {orderId}\r\n                  </p>\r\n                  <p>\r\n                    <span>Name -</span> {customerName}\r\n                  </p>\r\n                  <p>\r\n                    <span>No -</span> {customerNo}\r\n                  </p>\r\n                  <p>\r\n                    <span>Product -</span> {products}\r\n                  </p>\r\n                  <p>\r\n                    <span>Quantity -</span> {quantityEachProd}\r\n                  </p>\r\n                  <p>\r\n                    <span>Total -</span> {totalAmount}\r\n                  </p>\r\n                </span>\r\n                {this.props.isAdmin && (\r\n                  <span className=\"buttonsSpan\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={this.handleRemove}\r\n                      id={orderId}\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={this.handleEdit}\r\n                      id={orderId}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )\r\n        )}\r\n        {this.state.edit && (\r\n          <div className=\"editEmpDetails\">\r\n            <form className=\"px-4 py-3\">\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Customer Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Customer Name\"\r\n                  value={this.state.customerName}\r\n                  ref={this.customerName}\r\n                  onChange={this.handleChange.bind(this, \"customerName\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Customer No</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Customer No\"\r\n                  value={this.state.customerNo}\r\n                  ref={this.customerNo}\r\n                  onChange={this.handleChange.bind(this, \"customerNo\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Product: &nbsp;</label>\r\n                <select\r\n                  name=\"medList\"\r\n                  id=\"medList\"\r\n                  onChange={this.handleDropdown}\r\n                >\r\n                  {this.props.medList.map((item) => (\r\n                    <option value={[item.name, item.price]}>\r\n                      Name:{item.name}, Price:{item.price}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Quantity</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Quantity\"\r\n                  value={this.state.quantityEachProd}\r\n                  ref={this.quantityEachProd}\r\n                  onChange={this.handleChange.bind(this, \"quantityEachProd\")}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Total Amount</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Total Amount\"\r\n                  value={this.state.totalAmount}\r\n                  ref={this.totalAmount}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                onClick={this.handleUpdate}\r\n                id={this.state.editId}\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  medList: state.medList,\r\n  orderList: state.orders,\r\n  isAdmin: state.isAdmin,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setOrders: (payload) => dispatch(setOrders(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(ViewOrder);\r\n","import React, { Component } from \"react\";\r\nimport { emplList, medicineList, orderList } from \"../../../Data\";\r\nimport AddMedicine from \"./AddMedicine\";\r\nimport ViewMedicine from \"./ViewMedicine\";\r\nimport AddEmp from \"./AddEmp\";\r\nimport ViewEmp from \"./ViewEmp\";\r\nimport CreateOrder from \"../../Order/CreateOrder\";\r\nimport ViewOrder from \"../../Order/ViewOrder\";\r\nimport { connect } from \"react-redux\";\r\nimport { setEmpList, setMedList, setOrders } from \"../../../Redux/Action\";\r\n\r\nclass AdminHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setEmpList(emplList);\r\n    this.props.setMedList(medicineList);\r\n    this.props.setOrders(orderList);\r\n  }\r\n\r\n  render() {\r\n    return this.props.isAdmin ? (\r\n      <div className=\"mainHomeAdmin\">\r\n        <div className=\"leftDiv\">\r\n          {/* Add Medicine*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 0\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 0 });\r\n            }}\r\n          >\r\n            Add Medicine\r\n          </button>\r\n          {/* View Medicine*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 1\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 1 });\r\n            }}\r\n          >\r\n            View Medicine\r\n          </button>\r\n          {/* Add Emp*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 2\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 2 });\r\n            }}\r\n          >\r\n            Add Employee\r\n          </button>\r\n          {/* View Emp*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 3\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 3 });\r\n            }}\r\n          >\r\n            View Employees\r\n          </button>\r\n          {/* Create Order*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 4\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 4 });\r\n            }}\r\n          >\r\n            Create Order\r\n          </button>\r\n          {/* View Order*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 5\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 5 });\r\n            }}\r\n          >\r\n            View Order\r\n          </button>\r\n        </div>\r\n        <div className=\"rightDiv\">\r\n          {this.state.selected === 0 && <AddMedicine />}\r\n          {this.state.selected === 1 && <ViewMedicine />}\r\n          {this.state.selected === 2 && <AddEmp />}\r\n          {this.state.selected === 3 && <ViewEmp />}\r\n          {this.state.selected === 4 && <CreateOrder />}\r\n          {this.state.selected === 5 && <ViewOrder />}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      (self.location =\r\n        \"http://AbhijeetKumarGupta.github.io/PharmacyManagement_React/\") /*\"http://localhost:3000\"*/\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  isAdmin: state.isAdmin,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setEmpList: (payload) => dispatch(setEmpList(payload)),\r\n  setMedList: (payload) => dispatch(setMedList(payload)),\r\n  setOrders: (payload) => dispatch(setOrders(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(AdminHome);\r\n","import React, { Component } from \"react\";\r\nimport CreateOrder from \"../../Order/CreateOrder\";\r\nimport ViewOrder from \"../../Order/ViewOrder\";\r\nimport { orderList, medicineList } from \"../../../Data\";\r\nimport { connect } from \"react-redux\";\r\nimport { setOrders, setMedList } from \"../../../Redux/Action\";\r\n\r\nclass EmpHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.setOrders(orderList);\r\n    this.props.setMedList(medicineList);\r\n  }\r\n  render() {\r\n    return this.props.isSale ? (\r\n      <div className=\"mainHomeEmp\">\r\n        <div className=\"leftDiv\">\r\n          {/* Create Order*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 0\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 0 });\r\n            }}\r\n          >\r\n            Create Order\r\n          </button>\r\n          {/* View Order*/}\r\n          <button\r\n            className={\r\n              this.state.selected === 1\r\n                ? \"optionButtons active\"\r\n                : \"optionButtons\"\r\n            }\r\n            type=\"button\"\r\n            onClick={() => {\r\n              this.setState({ selected: 1 });\r\n            }}\r\n          >\r\n            View Order\r\n          </button>\r\n        </div>\r\n        <div className=\"rightDiv\">\r\n          {this.state.selected === 0 && <CreateOrder />}\r\n          {this.state.selected === 1 && <ViewOrder />}\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      (self.location =\r\n        \"http://AbhijeetKumarGupta.github.io/PharmacyManagement_React\") /*\"http://localhost:3000\"*/\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProp = (state) => ({\r\n  isSale: state.isSale,\r\n});\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setOrders: (payload) => dispatch(setOrders(payload)),\r\n  setMedList: (payload) => dispatch(setMedList(payload)),\r\n});\r\n\r\nexport default connect(mapStateToProp, mapDispatchToProp)(EmpHome);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { setIsAdmin, setIsSale } from \"../../Redux/Action\";\r\n\r\nclass Topbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleLogout = (e) => {\r\n    e.preventDefault();\r\n    this.props.setIsAdmin(false);\r\n    this.props.setIsSale(false);\r\n    self.location =\r\n      \"http://AbhijeetKumarGupta.github.io/PharmacyManagement_React/\"; //\"http://localhost:3000/\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light topbar\">\r\n        <div className=\"container-fluid\">\r\n          <h1 className=\"navbar-brand appName\">Pharmacy Management System</h1>\r\n          <div className=\"collapse navbar-collapse menu\" id=\"navbarNav\">\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"nav-link active\"\r\n                  aria-current=\"page\"\r\n                  onClick={this.handleLogout}\r\n                >\r\n                  Logout\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProp = (dispatch) => ({\r\n  setIsAdmin: (payload) => dispatch(setIsAdmin(payload)),\r\n  setIsSale: (payload) => dispatch(setIsSale(payload)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProp)(Topbar);\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <div id=\"footerDiv\">\r\n          <p>\r\n            -- PHARMACY MANAGEMENT SYSTEM PROJECT \"EDYODA DIGITAL UNIVERSITY\" --\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./Components/Login\";\nimport AdminHome from \"./Components/Manager/Home\";\nimport EmpHome from \"./Components/Employee/Home\";\nimport Topbar from \"./Components/Topbar\";\nimport Footer from \"./Components/Footer\";\nimport \"./App.css\";\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Topbar />\n        <Switch>\n          <Route path=\"/PharmacyManagement_React/\" exact component={Login} />\n          <Route path=\"PharmacyManagement_React/homeA/\" component={AdminHome} />\n          <Route path=\"PharmacyManagement_React/homeE/\" component={EmpHome} />\n          <Route\n            component={() => (\n              <h1 style={{ marginTop: \"50px\" }}>404 Not Found</h1>\n            )}\n          />\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  empList: [],\r\n  medList: [],\r\n  orders: [],\r\n  adminCred: [],\r\n  salesCred: [],\r\n  isAdmin: false,\r\n  isSale: false,\r\n};\r\n\r\nconst setState = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"UP_EMP_LIST\":\r\n      return { ...state, empList: payload };\r\n    case \"SET_EMP\":\r\n      return { ...state, empList: payload };\r\n    case \"SET_MED\":\r\n      return { ...state, medList: payload };\r\n    case \"SET_ORDER\":\r\n      return { ...state, orders: payload };\r\n    case \"SET_IS_ADMIN\":\r\n      return { ...state, isAdmin: payload };\r\n    case \"SET_IS_SALE\":\r\n      return { ...state, isSale: payload };\r\n    case \"SET_CRED_ADMIN\":\r\n      return { ...state, adminCred: payload };\r\n    case \"SET_CRED_SALE\":\r\n      return { ...state, salesCred: payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default setState;\r\n","import { createStore } from \"redux\";\r\nimport reducers from \"../Reducers\";\r\nimport { loadState, saveState } from \"../localStorage\";\r\n\r\nconst persistedState = loadState();\r\n\r\nconst store = createStore(reducers, persistedState);\r\n\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {}\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./Redux/Store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}